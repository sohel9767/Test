import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

def send_email(html_report, recipients, subject="Azure App Registration Expiry Report"):
    cloud_team = "CloudTeam@example.com"  # Update with your default sender/alias
    status = "success"

    if not html_report.strip():
        print("No content in the report. Skipping email.")
        return

    # Optional dry run
    if os.getenv('DRYRUN'):
        print("DRYRUN is enabled. Email content:\n", html_report)
        return

    # Handle email override
    if os.getenv('EMAIL_OVERRIDE'):
        override_email = os.getenv('EMAIL_OVERRIDE')
        print(f"EMAIL_OVERRIDE is enabled. Sending report to {override_email}")
        recipients = override_email

    # Build the message
    msg = MIMEMultipart('alternative')
    msg['From'] = cloud_team
    msg['To'] = recipients
    msg['Subject'] = f"{subject} - {status}"
    msg['BCC'] = cloud_team

    # Attach the HTML body
    msg.attach(MIMEText(html_report, 'html'))

    to_addrs = recipients.split(";") + [cloud_team]

    # Send the email using unauthenticated SMTP
    try:
        with smtplib.SMTP('your.smtp.server.com', 25) as server:  # Replace with your relay SMTP
            server.sendmail(cloud_team, to_addrs, msg.as_string())
        print(f"Email sent to {recipients}")
    except Exception as e:
        print("Failed to send email:", e)

# Example usage in Azure DevOps (ADO)
if __name__ == "__main__":
    # Simulate loading the report generated by another part of your pipeline
    with open("html_report.html", "r") as file:
        html_content = file.read()

    recipient_list = "recipient1@example.com;recipient2@example.com"
    send_email(html_content, recipient_list)
